#!/bin/bash
#------------------------------------------------
# target: configure
# author: junjiemars@gmail.com
# generated by Nore (https://github.com/junjiemars/nore)
#------------------------------------------------

NORE_ROOT="/opt/apps/nore"
NORE_BRANCH="edge"
NORE_L_BOOT="${NORE_ROOT}/bootstrap.sh"
NORE_R_BOOT="https://raw.githubusercontent.com/junjiemars/nore/${NORE_BRANCH}/bootstrap.sh"
NORE_L_CONF="${NORE_ROOT}/auto/configure"
NORE_L_CONF_OPTS=()
NORE_L_CONF_TRACE="no"
NORE_L_CONF_COMMAND=


for option
do
  case "$option" in
    -*=*)
			NORE_L_CONF_OPTS+=("$option")
			;;

    -*)
			 NORE_L_CONF_OPTS+=("$option")
			 ;;

    *) 
			 NORE_L_CONF_COMMAND="$option"  
			 ;;
  esac
done

case "`echo ${NORE_L_CONF_COMMAND} | tr '[:upper:]' '[:lower:]'`" in
	upgrade)
		if [ -f ${NORE_L_BOOT} ]; then
			$NORE_L_BOOT --branch=${NORE_BRANCH} upgrade
		else
			curl -sqL ${NORE_R_BOOT} \
				| ROOT=${NORE_ROOT} bash -s -- \
        --branch=${NORE_BRANCH} upgrade
		fi
    exit $?
		;;

  clone)
		if [ -f ${NORE_L_BOOT} ]; then
			$NORE_L_BOOT --branch=${NORE_BRANCH} --work=`pwd`
		else
			curl -sqL ${NORE_R_BOOT} \
				| ROOT=${NORE_ROOT} bash -s -- \
        --branch=${NORE_BRANCH} \
        --work=`pwd`
		fi
    exit $?
  	;;

  where)
    echo -e "NORE_ROOT=${NORE_ROOT}"
    echo -e "NORE_BRANCH=${NORE_BRANCH}"
    echo -e "configure=@${BASH_SOURCE[0]}"
    echo -e "make=@$(command -v make)"
    echo -e "shell=@$(ps -p$$ -ocommand | tr ' ' '\n' | sed -n 2p)"
    echo -n "cc-env.sh=@"
    if [ -f "${HOME%/}/.nore/cc-env.sh" ]; then
      echo -e "${HOME%/}/.nore/cc-env.sh"
    else
      echo ""
    fi
    echo -n "cc-env.id=@"
    if [ -f "${HOME%/}/.nore/cc-env.id" ]; then
      echo -e "${HOME%/}/.nore/cc-env.id[$(cat ${HOME%/}/.nore/cc-env.id)]"
    else
      echo ""
    fi
		
    echo -n "cc-inc.lst=@"
    if [ -f "${HOME%/}/.nore/cc-inc.lst" ]; then
      echo -e "${HOME%/}/.nore/cc-inc.lst"
    else
      echo ""
    fi
    echo -n "cc-inc.vimrc=@"
    if [ -f "${HOME%/}/.nore/cc-inc.vimrc" ]; then
      echo -e "${HOME%/}/.nore/cc-inc.vimrc"
    else
      echo ""
    fi
    exit $?
  	;;

  trace)
    NORE_L_CONF_TRACE="yes"
  	;;
esac

cd "`dirname ${BASH_SOURCE}`"

if [ -f ${NORE_L_CONF} ]; then
  case "${NORE_L_CONF_TRACE}" in
	  no)
      $NORE_L_CONF "$@"
    	;;

    yes)  
      bash -x $NORE_L_CONF "${NORE_L_CONF_OPTS[@]}"
    	;;
  esac
else
	echo
	echo "!nore << no found, to fix >: configure clone"
	echo 
fi

